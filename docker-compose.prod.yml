version: "3.9"
services:
  reverse_proxy:
    build:
      context: ./nginx
    ports:
      - "80:80"
    networks:
      - nginx_proxy
    depends_on:
      - frontend-app
      - backend-authentication

  frontend-app:
    build:
      context: ./frontend/dely
      dockerfile: ./dockerfiles/Dockerfile.prod
    expose:
      - "8100"
    networks:
      - backend
      - nginx_proxy
    depends_on:
      - backend-authentication

  backend-authentication:
    build:
      dockerfile: ./dockerfiles/Dockerfile.prod
      context: ./backend/authentication
    environment:
      - PGUSER=postgres
      - PGHOST=app-shopping-list-user-authentication.ckwcwakizcs2.eu-west-1.rds.amazonaws.com
      - PGDATABASE=postgres
      - PGPASSWORD=QuqpjjRsmA72FJS
      - PGPORT=5432
    expose:
      - "6300"
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy

networks:
  nginx_proxy:
    driver: bridge
  backend:
    driver: bridge